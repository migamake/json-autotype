name: json-autotype
version: "3.1.3"
synopsis: Automatic type declaration for JSON input data
description: |
  Generates datatype declarations with Aeson''s ''Data.Aeson.FromJSON''

  instances from a set of example @.json@ files.


  To get started you need to install the package,

  and run @json-autotype@ binary on an input @.json@ file.

  That will generate a new Aeson-based JSON parser.


  > $ json-autotype input.json -o JSONTypes.hs


  Feel free to tweak the by changing types of the fields

  — any field type that is instance of ''Data.Aeson.FromJSON'' should work.


  You may immediately test the parser by calling it as a script:


  > $ runghc JSONTypes.hs input.json


  One can now use multiple input files to generate better type description.


  Now with Elm code generation support!

  (If you want your favourite programming language supported too —

  name your price and mail the author.)


  See introduction on <https://github.com/mgajda/json-autotype> for details.'
  .
category: Data, Tools
author: Michal J. Gajda
maintainer:
  - simons@cryp.to
  - mjgajda@gmail.com
copyright: Copyright by Migamake '2014-'2020
license: BSD3
github: mgajda/json-autotype.git
tested-with: GHC==8.0.2 GHC==8.2.2 GHC==8.4.4 GHC==8.6.5 GHC==8.8.2 GHC==8.10.1
extra-source-files:
- README.md
- changelog.md
- examples/union.json
- examples/colors.json
- test/colors.json
- test/events.json
- test/interop.json
- test/jenkins.json
- test/youtube.json
- test/customerform.json
- test/facebook.json
- test/iPhoneMenu.json
- test/productsdb.json
other-extensions:
- TemplateHaskell
- ScopedTypeVariables
- OverloadedStrings
- FlexibleInstances
- MultiParamTypeClasses
- DeriveDataTypeable
- DeriveGeneric
- RecordWildCards
dependencies:
- base >=4.9 && <5
- GenericPretty >=1.2 && <1.3
- aeson >=1.2.1 && <2.1
- containers >=0.3 && <0.7
- filepath >=1.3 && <1.5
- hashable >=1.2 && <1.5
- lens >=4.1 && <5.2
- mtl >=2.1 && <2.3
- pretty >=1.1 && <1.3
- process >=1.1 && <1.7
- scientific >=0.3 && <0.5
- text >=1.1 && <1.4
- uniplate >=1.6 && <1.7
- unordered-containers >=0.2 && <0.3
- vector >=0.9 && <0.13
- json-alt
- template-haskell
library:
  source-dirs: src
  exposed-modules:
  - Data.Aeson.AutoType.CodeGen
  - Data.Aeson.AutoType.Extract
  - Data.Aeson.AutoType.Format
  - Data.Aeson.AutoType.CodeGen.Haskell
  - Data.Aeson.AutoType.CodeGen.HaskellFormat
  - Data.Aeson.AutoType.CodeGen.Generic
  - Data.Aeson.AutoType.CodeGen.Elm
  - Data.Aeson.AutoType.CodeGen.ElmFormat
  - Data.Aeson.AutoType.Pretty
  - Data.Aeson.AutoType.Split
  - Data.Aeson.AutoType.Type
  - Data.Aeson.AutoType.Test
  - Data.Aeson.AutoType.Util
  - Data.Aeson.AutoType.Nested
  dependencies:
  - data-default >=0.7 && <0.8
  - smallcheck >=1.0 && <1.3
  - QuickCheck >=2.4 && <3.0
  - run-haskell-module
executables:
  json-autotype:
    main: GenerateJSONParser.hs
    source-dirs:
    - app
    - common
    dependencies:
    - bytestring >=0.9 && <0.12
    - optparse-applicative >=0.12 && <1.0
    - yaml >=0.8 && <0.12
    - json-autotype
tests:
  json-autotype-examples:
    main: TestExamples.hs
    source-dirs:
    - test
    - common
    dependencies:
    - directory >=1.1 && <1.4
    - optparse-applicative >=0.11 && <1.0
    - smallcheck >=1.0 && <1.3
    - QuickCheck >=2.4 && <3.0
    - json-autotype
  json-autotype-qc-test:
    main: TestQC.hs
    source-dirs:
    - test/qc
    - common
    dependencies:
    - smallcheck >=1.0 && <1.3
    - optparse-applicative >=0.12 && <1.0
    - QuickCheck >=2.4 && <3.0
    - json-autotype
  json-autotype-gen-test:
    main: GenerateTestJSON.hs
    source-dirs:
    - test/gen
    - common
    dependencies:
    - bytestring >=0.9 && <0.12
    - directory >=1.1 && <1.4
    - optparse-applicative >=0.12 && <1.0
    - smallcheck >=1.0 && <1.3
    - QuickCheck >=2.4 && <3.0
    - json-autotype
stability: stable
